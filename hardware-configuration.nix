# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = ["amdgpu"];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [
	"video=eDP-1:1920x1080@60"
	"video=DP-3:3840x2160@60"
	];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f59568fd-a600-45e4-9f31-f47d401193a7";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/88A0-6240";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/20206588-dbf1-4a98-9caf-b16057d5b5e0"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # for Southern Islands (SI ie. GCN 1) cards
  # boot.kernelParams = [ "radeon.si_support=0" "amdgpu.si_support=1" ]; 
  # for Sea Islands (CIK ie. GCN 2) cards
  # boot.kernelParams = [ "radeon.cik_support=0" "amdgpu.cik_support=1" ];

  hardware.opengl.extraPackages = with pkgs; [
   rocm-opencl-icd
   rocm-opencl-runtime
   ];

   hardware.opengl.driSupport = true;
}
